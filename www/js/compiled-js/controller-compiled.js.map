{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 22/03/2018.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * property holds the Map objects which will contain a reference to dynamically loaded ES modules.\r\n     * NOTE: modules MUST BE deleted from this property i.e. the Map object when no longer need.\r\n     * This is to enable garbage collection and prevent memory leaks.\r\n     * NOTE: the keys used within the map will be identical to the same map value used in the SystemJS.config()\r\n     */\r\n    LOADED_MODULES: new Map(),\r\n\r\n    /**\r\n     * method contains the stratup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // displaying prepping message\r\n            $('#loader-modal-message').html(\"Loading App...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            // load the main-menu page\r\n            $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n\r\n            // add listener for when the Internet network connection is offline\r\n            document.addEventListener(\"offline\", function(){\r\n\r\n                // display a toast message to let user no there is no Internet connection\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. App functionality will be limited\",\r\n                    duration: 4000, // 4000 ms\r\n                    position: \"bottom\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#000000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                });\r\n\r\n            }, false);\r\n\r\n            // add listener for when the Internet network connection is online\r\n            document.addEventListener(\"online\", function(){\r\n\r\n                // display a toast message to let user no there is an active Internet connection\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"Internet Connection is active\",\r\n                    duration: 4000, // 4000 ms\r\n                    position: \"bottom\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#000000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                });\r\n\r\n            }, false);\r\n\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                 screen.orientation.lock('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                // prepare the inapp browser plugin\r\n                window.open = cordova.InAppBrowser.open;\r\n\r\n                // note: for most promises, we weill use async-wait syntax\r\n                // var a = await Promise.all([SystemJS.import('@syncfusion/ej2-base'), SystemJS.import('@syncfusion/ej2-dropdowns')]);\r\n            }\r\n            catch(err){ // catch any errors that may have occurred during app starup\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"Startup Error. App functionality may be limited. Always update the app to \" +\r\n                    \"get the best secure experience. Please contact us if problem continues\",\r\n                    duration: 5000, // 5000 ms\r\n                    position: \"bottom\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#000000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                });\r\n            }\r\n            finally{\r\n                // set status bar color\r\n                 StatusBar.backgroundColorByHexString(\"#004700\");\r\n                 navigator.splashscreen.hide(); // hide the splashscreen\r\n\r\n                 utopiasoftware[utopiasoftware_app_namespace].model.isAppReady = true; // true that app is fully loaded and ready\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n    /**\r\n     * view-model/controller for app side-menu\r\n     */\r\n    sideMenuPageViewModel: {\r\n\r\n        /**\r\n         * method is used to handle the click event on the side menu items\r\n         *\r\n         * @param menuItemLabel {String}\r\n         */\r\n        sideMenuItemClicked: function(menuItemLabel){\r\n\r\n            // close the side menu\r\n            $('ons-splitter').get(0).left.close();\r\n\r\n            // use a switch-case to determine what items where clicked\r\n            switch(menuItemLabel){\r\n                case \"main menu\":\r\n                    $('#app-main-navigator').get(0).resetToPage(\"main-menu-page.html\", {pop: true});\r\n                    break;\r\n\r\n                case \"video messages\":\r\n                    $('#app-main-navigator').get(0).bringPageTop(\"video-messages-page.html\");\r\n                    break;\r\n\r\n                case \"visit website\":\r\n                    // open the website\r\n                    window.open('http://heritageassembly.net/', '_system');\r\n                    break;\r\n\r\n                case \"facebook feed\":\r\n                    $('#app-main-navigator').get(0).bringPageTop(\"facebook-feed-page.html\");\r\n                    break;\r\n\r\n                case \"twitter feed\":\r\n                    $('#app-main-navigator').get(0).bringPageTop(\"twitter-feed-page.html\");\r\n                    break;\r\n\r\n                case \"contact us\":\r\n                    $('#app-main-navigator').get(0).bringPageTop(\"contact-us-page.html\");\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Main Menu page\r\n     */\r\n    mainMenuPageViewModel: {\r\n\r\n        /**\r\n         * method is triggered when page is initialised\r\n         * @param event\r\n         */\r\n        pageInit: function(event){\r\n            var $thisPage = $(event.target); // get a reference to the current page\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.mainMenuPageViewModel.backButtonClicked;\r\n\r\n                $('#loader-modal').get(0).hide(); // hide the loader\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // add background animation class\r\n            $('#main-menu-page .page--material__background').addClass('apply-moving-background-animation');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // remove background animation class\r\n            $('#main-menu-page .page--material__background').removeClass('apply-moving-background-animation');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){},\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).left.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).left.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Quit App',\r\n                    buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * method is called when items for the app's main menu are clicked\r\n         *\r\n         * @param menuItemLabel {String} the label for the menu item that was clicked\r\n         */\r\n        mainMenuItemClicked: function(menuItemLabel){\r\n\r\n            // use a switch-case to determine what page to load\r\n            switch(menuItemLabel){\r\n\r\n                case \"video messages\":\r\n                    $('#app-main-navigator').get(0).pushPage(\"video-messages-page.html\");\r\n                    break;\r\n\r\n                case \"twitter\":\r\n                    $('#app-main-navigator').get(0).pushPage(\"twitter-feed-page.html\");\r\n                    break;\r\n\r\n                case \"facebook\":\r\n                    $('#app-main-navigator').get(0).pushPage(\"facebook-feed-page.html\");\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * view-model/controller object for Twitter Feed page\r\n     */\r\n    twitterFeedPageViewModel: {\r\n\r\n        twitterWidgetCode: `<a class=\"twitter-timeline\"  href=\"https://twitter.com/HeritageAssembl\"\r\n        data-widget-id=\"739091831535898624\" data-width=\"98%\" data-height=\"100%\">Tweets by @HeritageAssembl</a>`,\r\n\r\n        /**\r\n         * method is triggered when page is initialised\r\n         * @param event\r\n         */\r\n        pageInit: function(event){\r\n            var $thisPage = $(event.target); // get a reference to the current page\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // check if Internet Connection is available before proceeding\r\n                if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                    // inform the user that they cannot proceed without Internet\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: \"Twitter Feed cannot be retrieved without an Internet Connection\",\r\n                        duration: 4000,\r\n                        position: \"top\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#ff0000', //red\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n\r\n                    return; // exit method immediately\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.twitterFeedPageViewModel.backButtonClicked;\r\n\r\n\r\n                if(!twttr.widgets){ // twitter widget library not loaded yet\r\n                    // wait for 1 second and try again\r\n                    window.setTimeout(loadPageOnAppReady, 1000);\r\n                    return;\r\n                }\r\n\r\n                // insert the twitter widget into the app\r\n                $('#twitter-feed-container', $thisPage).html(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                twitterFeedPageViewModel.twitterWidgetCode);\r\n                // instantiate the twitter widget\r\n                twttr.widgets.load(\r\n                    $('#twitter-feed-container', $thisPage).get(0)\r\n                );\r\n\r\n                $('#loader-modal').get(0).hide(); // hide the loader\r\n\r\n                window.setTimeout(function(){ // wait for 2 seconds before hiding the page preloader\r\n                    // hide the page preloader\r\n                    $('.page-preloader', $thisPage).css(\"display\", \"none\");\r\n                }, 2000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // remove the twitter content\r\n            $('#twitter-feed-page #twitter-feed-container').html('');\r\n            // show the page preloader\r\n            $('#twitter-feed-page .page-preloader').css(\"display\", \"block\");\r\n        },\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).left.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).left.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            $('#app-main-navigator').get(0).popPage(); // display the previous page in the stack\r\n        },\r\n\r\n        /**\r\n         * method is triggered when \"Refresh\" button is clicked\r\n         */\r\n        refreshButtonClicked: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"Twitter Feed cannot be retrieved without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            if(!twttr.widgets){ // twitter widget library not loaded yet\r\n                // wait for 1 second and try again\r\n                window.setTimeout(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    twitterFeedPageViewModel.refreshButtonClicked, 1000);\r\n                return;\r\n            }\r\n\r\n            // remove the twitter content\r\n            $('#twitter-feed-page #twitter-feed-container').html('');\r\n            // show the page preloader\r\n            $('#twitter-feed-page .page-preloader').css(\"display\", \"block\");\r\n\r\n            // insert the twitter widget into the app\r\n            $('#twitter-feed-page #twitter-feed-container').html(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                twitterFeedPageViewModel.twitterWidgetCode);\r\n            window.setTimeout(function(){ // wait for 2 seconds before initiating the twitter-feed loading\r\n                // instantiate the twitter widget\r\n                twttr.widgets.load(\r\n                    $('#twitter-feed-page #twitter-feed-container').get(0)\r\n                );\r\n                // hide the page preloader\r\n                $('#twitter-feed-page .page-preloader').css(\"display\", \"none\");\r\n            }, 2000);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * view-model/controller object for Twitter Feed page\r\n     */\r\n    facebookFeedPageViewModel: {\r\n\r\n        /**\r\n         * property holds the code use tfo generate the facebook widget\r\n         */\r\n        facebookWidgetCode: '',\r\n\r\n        /**\r\n         * method is triggered when page is initialised\r\n         * @param event\r\n         */\r\n        pageInit: function(event){\r\n            var $thisPage = $(event.target); // get a reference to the current page\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // check if Internet Connection is available before proceeding\r\n                if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                    // inform the user that they cannot proceed without Internet\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: \"Facebook Feed cannot be retrieved without an Internet Connection\",\r\n                        duration: 4000,\r\n                        position: \"top\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#ff0000', //red\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n\r\n                    return; // exit method immediately\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.facebookFeedPageViewModel.backButtonClicked;\r\n\r\n                var faceBookFeedDimensions = {width: Math.round($(\"#facebook-feed-container\", $thisPage).width()),\r\n                    height: Math.round($(\"#facebook-feed-container\", $thisPage).height())}; // get the dimensions for the facebook widget container\r\n                // update the string code for the facebook widget\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    facebookFeedPageViewModel.facebookWidgetCode = '<iframe src=\"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2Fheritageassemblychurch&tabs=timeline&width='\r\n                    + faceBookFeedDimensions.width + '&height=' + faceBookFeedDimensions.height +\r\n                    '&small_header=true&adapt_container_width=true&hide_cover=false&show_facepile=false&appId=1724754357799229\" style=\"border:none;overflow:hidden; width: 95%; height: 100%;\" scrolling=\"no\" frameborder=\"0\" allowTransparency=\"true\"></iframe>'\r\n\r\n\r\n                $('#loader-modal').get(0).hide(); // hide the loader\r\n\r\n                window.setTimeout(function(){ // wait for 2 seconds before proceding with complete page loading\r\n                    // remove any previous content from the container\r\n                    $(\"#facebook-feed-container\", $thisPage).html('');\r\n                    // re-insert a fresh facebook widget now\r\n                    $(\"#facebook-feed-container\", $thisPage).html(\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            facebookFeedPageViewModel.facebookWidgetCode);\r\n                    // hide the page preloader\r\n                    $('.page-preloader', $thisPage).css(\"display\", \"none\");\r\n                }, 2000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // remove the facebook content\r\n            $('#facebook-feed-page #facebook-feed-container').html('');\r\n            // show the page preloader\r\n            $('#facebook-feed-page .page-preloader').css(\"display\", \"block\");\r\n        },\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).left.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).left.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            $('#app-main-navigator').get(0).popPage(); // display the previous page in the stack\r\n        },\r\n\r\n        /**\r\n         * method is triggered when \"Refresh\" button is clicked\r\n         */\r\n        refreshButtonClicked: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"Facebook Feed cannot be retrieved without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n\r\n            // remove the facebook content\r\n            $('#facebook-feed-page #facebook-feed-container').html('');\r\n            // show the page preloader\r\n            $('#facebook-feed-page .page-preloader').css(\"display\", \"block\");\r\n\r\n            window.setTimeout(function(){ // wait for 2 seconds before initiating the twitter-feed loading\r\n\r\n                // insert the facebook widget into the app\r\n                $('#facebook-feed-page #facebook-feed-container').html(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    facebookFeedPageViewModel.facebookWidgetCode);\r\n                // hide the page preloader\r\n                $('#facebook-feed-page .page-preloader').css(\"display\", \"none\");\r\n            }, 2000);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Contact Us page\r\n     */\r\n    contactUsPageViewModel: {\r\n\r\n        /**\r\n         * method is triggered when page is initialised\r\n         * @param event\r\n         */\r\n        pageInit: function(event){\r\n            var $thisPage = $(event.target); // get a reference to the current page\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.contactUsPageViewModel.backButtonClicked;\r\n\r\n                $('#loader-modal').get(0).hide(); // hide the loader\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){},\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).left.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).left.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            $('#app-main-navigator').get(0).popPage(); // display the previous page in the stack\r\n        },\r\n\r\n        /**\r\n         * method is triggered when email addresses from the \"contact us\" list are clicked\r\n         * @param emailAddress {String}\r\n         */\r\n        contactEmailButtonClicked: function(emailAddress){\r\n            window.open('mailto:' + emailAddress, '_system');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when telephone numbers from the \"contact us\" list are clicked\r\n         * @param telephoneNumber {String}\r\n         */\r\n        contactTelephoneButtonClicked: function(telephoneNumber){\r\n            window.open('tel:' + telephoneNumber, '_system');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * view-model/controller object for Video Messages page\r\n     */\r\n    videoMessagesPageViewModel: {\r\n\r\n        /**\r\n         * holds the unique Id for the the Youtube Channel. Id is generated by Youtube\r\n         */\r\n        youtubeChannelId: \"UC8Pgm2oZAQdAgIm2VKHLn6Q\",\r\n\r\n        /**\r\n         * holds the Id for the playlist to be played from th Youtube Channel\r\n         */\r\n        playlistId: \"\",\r\n\r\n        /**\r\n         * holds the width used for video messages\r\n         */\r\n        videoMessageWidth: 100,\r\n\r\n        /**\r\n         * holds the height used for video messages\r\n         */\r\n        videoMessageHeight: 50,\r\n\r\n        /**\r\n         * method is triggered when page is initialised\r\n         * @param event\r\n         */\r\n        pageInit: function(event){\r\n            var $thisPage = $(event.target); // get a reference to the current page\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.videoMessagesPageViewModel.backButtonClicked;\r\n\r\n                // calculate the width & height used to display video messages\r\n                var videoDimensions =\r\n                    {width: Math.round($(\"#video-messages-list .e-card-content\", $thisPage).width()),\r\n                    height: Math.round($(\"#video-messages-list .e-card-content\", $thisPage).height())}; // get the dimensions for the video messages container\r\n                // calculate the dimensions for the video messages display\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    videoMessagesPageViewModel.videoMessageWidth = videoDimensions.width - 56;\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    videoMessagesPageViewModel.videoMessageHeight = Math.round(videoDimensions.width * 0.5625);\r\n\r\n                // call the refreshButtonClicked() method to load the video messages content\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.videoMessagesPageViewModel.refreshButtonClicked();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).left.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).left.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            $('#app-main-navigator').get(0).popPage(); // display the previous page in the stack\r\n        },\r\n\r\n        /**\r\n         * method is triggered when \"Refresh\" button is clicked\r\n         */\r\n        refreshButtonClicked: async function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"Video Messages cannot be loaded without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n\r\n            // remove the previous csontent from the list\r\n            $('#video-messages-page #video-messages-list').html('');\r\n            // show the page preloader\r\n            $('#video-messages-page .page-preloader').css(\"display\", \"block\");\r\n\r\n            var listContent = ''; // holds ther contents of the video messages list\r\n\r\n            try{\r\n                // retrieve the id playlist for 'uploads'\r\n                var serverResponse = await Promise.resolve($.ajax(\r\n                    {\r\n                        url: \"https://www.googleapis.com/youtube/v3/channels\",\r\n                        type: \"get\",\r\n                        dataType: \"json\",\r\n                        //crossDomain: true,\r\n                        //xhrFields: {withCredentials: true},\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: \"key=AIzaSyD2UwTMxQhlv-Mb3gdj5PqlIcE3Bri_i9A&part=\" +\r\n                        encodeURIComponent(\"id,contentDetails,snippet\") + \"&id=\" +\r\n                        encodeURIComponent(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            videoMessagesPageViewModel.youtubeChannelId) +\r\n                        \"&fields=\" +\r\n                        encodeURIComponent(\"items(contentDetails/relatedPlaylists/uploads,id,snippet(title,thumbnails/high))\")\r\n                    }\r\n                ));\r\n\r\n                // store the 'upload' playlist id\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.videoMessagesPageViewModel.playlistId =\r\n                    serverResponse.items[0].contentDetails.relatedPlaylists.uploads;\r\n\r\n                //retrieve the playlist items in the 'upload' playlist\r\n                serverResponse = await Promise.resolve($.ajax(\r\n                    {\r\n                        url: \"https://www.googleapis.com/youtube/v3/playlistItems\",\r\n                        type: \"get\",\r\n                        dataType: \"json\",\r\n                        //crossDomain: true,\r\n                        //xhrFields: {withCredentials: true},\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: \"key=AIzaSyD2UwTMxQhlv-Mb3gdj5PqlIcE3Bri_i9A&part=\" +\r\n                        encodeURIComponent(\"contentDetails\") + \"&playlistId=\" +\r\n                        encodeURIComponent(utopiasoftware[utopiasoftware_app_namespace].controller.videoMessagesPageViewModel.playlistId) +\r\n                        \"&maxResults=5&fields=\" +\r\n                        encodeURIComponent(\"items/contentDetails/videoId\")\r\n                    }\r\n                ));\r\n\r\n                // get the video ids and iframe html for the video contained in the upload playlistg\r\n                serverResponse = await (function(playListItemsResponse){\r\n\r\n                    var videoIdsArray = []; // holds all ids for videos which are to be loaded\r\n                    var promisesArray = []; // holds the array of all Promises\r\n\r\n                    // loop through all the return items and extract the video ids into the array\r\n                    for(var index = 0; index < playListItemsResponse.items.length; index++)\r\n                    {\r\n                        videoIdsArray[index] = playListItemsResponse.items[index].contentDetails.videoId;\r\n                        promisesArray[index] = $.ajax( // make a request for videos using the ids that were retrieved\r\n                            {\r\n                                url: \"https://www.googleapis.com/youtube/v3/videos\",\r\n                                type: \"get\",\r\n                                dataType: \"json\",\r\n                                //crossDomain: true,\r\n                                //xhrFields: {withCredentials: true},\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: false,\r\n                                data: \"key=AIzaSyD2UwTMxQhlv-Mb3gdj5PqlIcE3Bri_i9A&part=\" +\r\n                                encodeURIComponent(\"snippet,player\") + \"&id=\" +\r\n                                videoIdsArray[index] +\r\n                                \"&fields=\" +\r\n                                encodeURIComponent(\"items(snippet(title,publishedAt),player)\")\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    return Promise.all(promisesArray);\r\n                })(serverResponse);\r\n\r\n                // map the contents of the returned array using the helper function\r\n                serverResponse = await videoMessagesMapping(serverResponse);\r\n                for(let index = 0; index < serverResponse.length; index++){\r\n\r\n                    listContent += `<ons-list-item modifier=\"nodivider\" lock-on-drag=\"true\" style=\"background-color: transparent\">\r\n                        <div class=\"e-card\" style=\"background-color: #e8e8e8\">\r\n                            <div class=\"e-card-content\" style=\"margin-left: auto !important; margin-right: auto !important;\">\r\n                                ${serverResponse[index].items[0].player.embedHtml}\r\n                            </div>\r\n                            <div class=\"e-card-header\">\r\n                                <div class=\"e-card-header-caption\">\r\n                                    <div class=\"e-card-header-title\">${serverResponse[index].items[0].snippet.title}</div>\r\n                                    <div class=\"e-card-sub-title\">Date: ${kendo.toString(new Date(serverResponse[index].items[0].snippet.publishedAt), \"D\")}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ons-list-item>`;\r\n                } // end of for-loop\r\n\r\n                // append generated listContent to the list\r\n                $('#video-messages-page #video-messages-list').append(listContent);\r\n                // hide the page preloader\r\n                $('#video-messages-page .page-preloader').css(\"display\", \"none\");\r\n                // scroll to the top of the list\r\n                $('#video-messages-page .page__content').scrollTop(0);\r\n\r\n            }\r\n            catch (err){\r\n                console.log(\"ERROR \", err);\r\n            }\r\n\r\n\r\n            /**\r\n             * function is a helper used to update the contents of the video messages display elements\r\n             *\r\n             * @param videoMessagesArray\r\n             * @returns {Promise<any>}\r\n             */\r\n            function videoMessagesMapping(videoMessagesArray){\r\n\r\n                return new Promise(function(resolve, reject){\r\n                    resolve(videoMessagesArray.map(function(arrayElem){ // map/transform each element in the array\r\n                        // updatge the iframe html content is that the video messages can be rightly displayed in-app\r\n                        arrayElem.items[0].player.embedHtml =\r\n                            arrayElem.items[0].player.embedHtml.replace(\"//\", \"https://\").replace('width=\"480\"',\r\n                                'width=\"' + utopiasoftware[utopiasoftware_app_namespace].controller.videoMessagesPageViewModel.videoMessageWidth + '\"').\r\n                            replace('height=\"360\"', 'height=\"' + utopiasoftware[utopiasoftware_app_namespace].controller.videoMessagesPageViewModel.\r\n                                videoMessageHeight + '\"');\r\n\r\n                        //return the update element\r\n                        return arrayElem;\r\n                    }));\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n"]}